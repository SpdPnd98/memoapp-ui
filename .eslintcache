[{"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/App.tsx":"1","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/home.tsx":"2","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/index.tsx":"3","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/routes/routes.tsx":"4","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memoboards.tsx":"5","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memos.tsx":"6","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/newMemo.tsx":"7","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memo.tsx":"8","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memoboard.tsx":"9","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/editMemo.tsx":"10","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memoForm.tsx":"11","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/login.tsx":"12","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/resources/constants.tsx":"13","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/resources/categories.tsx":"14","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/resources/styles.tsx":"15","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/categoryDropDown.tsx":"16","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/categoryForm.tsx":"17","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/reportWebVitals.ts":"18","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/newCategory.tsx":"19","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/editCategory.tsx":"20","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/categoryFilter.tsx":"21"},{"size":146,"mtime":1610090891526,"results":"22","hashOfConfig":"23"},{"size":359,"mtime":1610090891526,"results":"24","hashOfConfig":"25"},{"size":1306,"mtime":1611161134686,"results":"26","hashOfConfig":"23"},{"size":454,"mtime":1611161110406,"results":"27","hashOfConfig":"23"},{"size":2566,"mtime":1610782438226,"results":"28","hashOfConfig":"23"},{"size":6735,"mtime":1611161065462,"results":"29","hashOfConfig":"23"},{"size":2563,"mtime":1611128278104,"results":"30","hashOfConfig":"23"},{"size":3384,"mtime":1611133012386,"results":"31","hashOfConfig":"23"},{"size":2144,"mtime":1611133118913,"results":"32","hashOfConfig":"23"},{"size":2490,"mtime":1610824382020,"results":"33","hashOfConfig":"23"},{"size":4117,"mtime":1611131506404,"results":"34","hashOfConfig":"23"},{"size":354,"mtime":1610736078796,"results":"35","hashOfConfig":"23"},{"size":161,"mtime":1611127979870,"results":"36","hashOfConfig":"23"},{"size":2837,"mtime":1610776913869,"results":"37","hashOfConfig":"23"},{"size":123,"mtime":1611132904903,"results":"38","hashOfConfig":"23"},{"size":4056,"mtime":1611132267606,"results":"39","hashOfConfig":"23"},{"size":4033,"mtime":1611061545199,"results":"40","hashOfConfig":"23"},{"size":425,"mtime":1610090891526,"results":"41","hashOfConfig":"23"},{"size":1341,"mtime":1611161073842,"results":"42","hashOfConfig":"23"},{"size":1357,"mtime":1611161035718,"results":"43","hashOfConfig":"23"},{"size":2452,"mtime":1611133294464,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"nbk0q8",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gv5i1q",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/App.tsx",[],["93","94"],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/home.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/index.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/routes/routes.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memoboards.tsx",["95"],"import  { useEffect, useState } from \"react\";\nimport { MemoboardProps } from \"../model/memoboard\";\nimport { URL } from \"../resources/constants\";\nimport Memoboard from \"./memoboard\";\nimport { useHistory } from \"react-router\";\n// import { Link, Redirect } from \"react-router-dom\";\n\nfunction Memoboards () {\n    const [id, setId] = useState<number>(1);\n    const [isLoaded, setIsLoaded] = useState<boolean>(false);\n    const [memoboards, setMemoboards] = useState<MemoboardProps[]>([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        //fetch memoboards\n        const urlMemoboards = URL + \"/v1/memoboards\";\n        fetch(urlMemoboards)\n            .then(response => {\n                if(response.ok) {\n                    // console.log(JSON.stringify(response.json()));\n                    return response.json();\n                }\n                // console.log(response.text());\n                throw new Error(\"Network was not ok.\")\n            })\n            .then((response: any) => { // temporary solution, expected response is MemoboardProps[]\n                const id = 1; // some way to get cached value, default is master memo\n                console.log(JSON.stringify(response));\n                setId(id);\n                setIsLoaded(true);\n                setMemoboards(response.memoboards);\n            })\n            .catch(returnIndex);\n    }, []);\n\n    const returnIndex = () => {\n        history.push({\n            pathname: \"/\",\n            state: {\n                response: \"error!\"\n            },\n        })\n    };\n\n        \n    const selectMemoboard = (id: number) => {\n        const findMemoboard = memoboards.filter((memoboard: MemoboardProps) => memoboard.id === id);\n        if (findMemoboard.length === 0) {\n            console.log(\"error with filter!\");\n            console.log(\"the value of state id is: \" + id)\n            return; // wrong index!\n        }\n        const currentMemoBoard = findMemoboard[0]; //take the first board with matching id\n        //fetch corresponding memos\n        \n        return (\n            <Memoboard memoboard_name={currentMemoBoard.memoboard_name} \n                       id={currentMemoBoard.id}\n                       />\n        );\n    }\n\n    const loading = () => {\n        return (\n            <div>\n                <p>Loading...</p>\n            </div>\n        );\n    }\n    \n    if(isLoaded === true) {\n        return (\n            <div>\n                {selectMemoboard(id)}\n            </div>\n        );\n    } else {\n        return loading();\n    }\n}\n\nexport default Memoboards;",["96","97"],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memos.tsx",["98","99"],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/newMemo.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memo.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memoboard.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/editMemo.tsx",["100","101"],"import { useState } from \"react\";\nimport { MemoProps } from \"../model/memo\";\n// import Button from \"@material-ui/core/Button\";\n// import { TextField, Card, CardContent, CardActions} from \"@material-ui/core\";\nimport { withStyles, Theme } from \"@material-ui/core/styles\"\nimport MemoForm from \"./memoForm\";\nimport { styles } from \"../resources/styles\";\n\nfunction EditMemoComponent(props: MemoProps) {\n    const [title, setTitle] = useState<string>(props.title);\n    const [body, setBody] = useState<string>(props.body);\n    // const [categoryId, setCategoryId] = useState<number>(props.category_id);\n    // const [memoboardId, setMemoboardId] = useState<number>(props.memoboard_id);\n\n    const handleSubmit = (event: any, payload: any) => {\n        event.preventDefault();\n        const url = \"http://localhost:3000/v1/memoboards/\" \n                    + props.memoboard_id.toString() + \"/memos/\"\n                    + props.id;\n\n        if(title.length === 0 || body.length === 0) {\n            //show popup \"create proper memo!\"\n            console.log(\"error in update\")\n            return;\n        }\n        console.log(JSON.stringify(payload));\n\n        fetch(url,{\n            method: \"PATCH\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n                throw new Error(\"network connection error!\");\n            })\n            .then(response => {\n                //re-render the app with the reply\n                props.update_parent(response);\n            })\n            .catch(error => console.log(error.message));\n    }\n\n    return (<MemoForm \n                id={props.id}\n                title={props.title}\n                body={props.body}\n                memoboard_id={props.memoboard_id}\n                update_parent={props.update_parent}\n                handle_submit = {handleSubmit}\n                editing={true}\n                text={\"Update\"}\n                \n                category_id={props.category_id}\n                category_color={props.category_color}\n                category_name={props.category_name}\n                categories = {props.categories}\n                category_update = {props.category_update} />)\n}\n\nexport default withStyles((theme: Theme) => styles)(EditMemoComponent);\n",["102","103"],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memoForm.tsx",["104"],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/login.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/resources/constants.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/resources/categories.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/resources/styles.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/categoryDropDown.tsx",["105"],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/categoryForm.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/reportWebVitals.ts",[],["106","107"],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/newCategory.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/editCategory.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/categoryFilter.tsx",["108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":34,"column":8,"nodeType":"115","endLine":34,"endColumn":10,"suggestions":"116"},{"ruleId":"109","replacedBy":"117"},{"ruleId":"111","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":17,"column":24,"nodeType":"121","messageId":"122","endLine":17,"endColumn":37},{"ruleId":"113","severity":1,"message":"123","line":144,"column":8,"nodeType":"115","endLine":144,"endColumn":26,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"125","line":10,"column":19,"nodeType":"121","messageId":"122","endLine":10,"endColumn":27},{"ruleId":"119","severity":1,"message":"126","line":11,"column":18,"nodeType":"121","messageId":"122","endLine":11,"endColumn":25},{"ruleId":"109","replacedBy":"127"},{"ruleId":"111","replacedBy":"128"},{"ruleId":"119","severity":1,"message":"129","line":15,"column":25,"nodeType":"121","messageId":"122","endLine":15,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":12,"column":24,"nodeType":"121","messageId":"122","endLine":12,"endColumn":37},{"ruleId":"109","replacedBy":"130"},{"ruleId":"111","replacedBy":"131"},{"ruleId":"119","severity":1,"message":"132","line":36,"column":11,"nodeType":"121","messageId":"122","endLine":36,"endColumn":16},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'returnIndex'. Either include it or remove the dependency array.","ArrayExpression",["135"],["133"],["134"],"@typescript-eslint/no-unused-vars","'setCategories' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'isLoaded' and 'props.memoboard_id'. Either include them or remove the dependency array.",["136"],"'setTitle' is assigned a value but never used.","'setBody' is assigned a value but never used.",["133"],["134"],"'setMemoboardId' is assigned a value but never used.",["133"],["134"],"'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [returnIndex]",{"range":"141","text":"142"},"Update the dependencies array to be: [memos, editingId, isLoaded, props.memoboard_id]",{"range":"143","text":"144"},[1377,1379],"[returnIndex]",[5079,5097],"[memos, editingId, isLoaded, props.memoboard_id]"]