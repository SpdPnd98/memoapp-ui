[{"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/App.tsx":"1","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/home.tsx":"2","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/index.tsx":"3","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/routes/routes.tsx":"4","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memoboards.tsx":"5","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memos.tsx":"6","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/newMemo.tsx":"7","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memo.tsx":"8","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memoboard.tsx":"9","/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/editMemo.tsx":"10"},{"size":146,"mtime":1610090891526,"results":"11","hashOfConfig":"12"},{"size":359,"mtime":1610090891526,"results":"13","hashOfConfig":"14"},{"size":500,"mtime":1610090891526,"results":"15","hashOfConfig":"12"},{"size":456,"mtime":1610090891526,"results":"16","hashOfConfig":"12"},{"size":2497,"mtime":1610534160646,"results":"17","hashOfConfig":"12"},{"size":4451,"mtime":1610559767842,"results":"18","hashOfConfig":"12"},{"size":3292,"mtime":1610561241974,"results":"19","hashOfConfig":"12"},{"size":2882,"mtime":1610561165853,"results":"20","hashOfConfig":"12"},{"size":680,"mtime":1610543346514,"results":"21","hashOfConfig":"12"},{"size":3759,"mtime":1610561222951,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nbk0q8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gv5i1q",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/App.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/home.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/index.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/routes/routes.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memoboards.tsx",["45"],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memos.tsx",["46"],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/newMemo.tsx",["47","48","49"],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memo.tsx",[],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/memoboard.tsx",["50"],"import { useState, useEffect } from \"react\";\nimport {MemoboardProps} from \"../model/memoboard\";\nimport Memos from \"./memos\";\n\nexport default function Memoboard(props: MemoboardProps) {\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const loading = () => {\n        return (\n            <div>\n                <p>Loading...</p>\n            </div>\n        );\n    }\n\n    useEffect(() => {\n        setIsLoaded(true);\n    })\n\n\n    if(isLoaded){\n        return (\n        <div>\n            <h1>{props.memoboard_name}</h1>\n            <p>Switch a memoboard:</p>\n            <Memos memoboard_id={props.id}/>\n        </div>\n        );\n    } else {\n        return loading();\n    }\n}",["51","52"],"/mnt/DLRigStorage/codes/CVWO-memo-submission/memoapp-ui/src/components/editMemo.tsx",["53","54"],{"ruleId":"55","severity":1,"message":"56","line":64,"column":8,"nodeType":"57","endLine":64,"endColumn":10,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":101,"column":8,"nodeType":"57","endLine":101,"endColumn":26,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":20,"nodeType":"63","messageId":"64","endLine":1,"endColumn":29},{"ruleId":"61","severity":1,"message":"65","line":17,"column":24,"nodeType":"63","messageId":"64","endLine":17,"endColumn":37},{"ruleId":"61","severity":1,"message":"66","line":18,"column":25,"nodeType":"63","messageId":"64","endLine":18,"endColumn":39},{"ruleId":"55","severity":1,"message":"67","line":16,"column":5,"nodeType":"63","endLine":16,"endColumn":14,"suggestions":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"61","severity":1,"message":"65","line":17,"column":24,"nodeType":"63","messageId":"64","endLine":17,"endColumn":37},{"ruleId":"61","severity":1,"message":"66","line":18,"column":25,"nodeType":"63","messageId":"64","endLine":18,"endColumn":39},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["73"],"React Hook useEffect has missing dependencies: 'isLoaded' and 'props.memoboard_id'. Either include them or remove the dependency array.",["74"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setCategoryId' is assigned a value but never used.","'setMemoboardId' is assigned a value but never used.","React Hook useEffect contains a call to 'setIsLoaded'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["75"],"no-native-reassign",["76"],"no-negated-in-lhs",["77"],{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [history]",{"range":"84","text":"85"},"Update the dependencies array to be: [memos, editingId, isLoaded, props.memoboard_id]",{"range":"86","text":"87"},"Add dependencies array: []",{"range":"88","text":"89"},[2290,2292],"[history]",[3408,3426],"[memos, editingId, isLoaded, props.memoboard_id]",[427,427],", []"]